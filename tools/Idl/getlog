;=============================================================================
;
; Original version written by M. Nauta, later extended by G. Toth, for VAC
; 
; Read the log data from one or more files
;
; The first 3 columns are assumed to contain step, t, dt
; the rest is read into the wlog(nt,nwlog) array, 
; and the last column may contain the relative change resid.
;=============================================================================

nlogfile=0
if logfilename eq '' and filename ne '' then begin
   logfilename=filename
   while strpos(logfilename,'.out') ge 0 $
      do strput,logfilename,'.log',strpos(logfilename,'.out')
   while strpos(logfilename,'.ini') ge 0 $
      do strput,logfilename,'.log',strpos(logfilename,'.ini')
   askstr,'logfilename(s) ',logfilename,1
endif else $
   askstr,'logfilename(s) ',logfilename,doask

str2arr,logfilename,logfilenames,nlogfile
if nlogfile gt 3 then begin
   print,'Error in GetLog: cannot handle more than 3 files.'
   retall
endif

for ifile=0,nlogfile-1 do begin
   data=fstat(1)
   if data.open ne 0 then close,1
   openr,1,logfilenames(ifile)

   headline=''
   readf,1,headline
   print,'headline       =',strtrim(headline,2)
   wlognames=''
   readf,1,wlognames

   wlognames=str_sep(strtrim(strcompress(wlognames),2),' ')
   wlognames=wlognames(3:*)
   nwlog=n_elements(wlognames)
   okresid= wlognames(nwlog-1) eq 'residual'

   if okresid then nwlog=nwlog-1

   if nlogfile eq 1 then begin
      if okresid then print,'Reading arrays step,t,dt,resid,wlog:' $
      else            print,'Reading arrays step,t,dt,wlog:'
      for i=0,nwlog-1 do $
         print,FORMAT='("  wlog(*,",I2,")= ",A)',i,wlognames(i)
   endif else begin
      if okresid then print,'Reading arrays step',ifile,',t',ifile,',dt',     $
        ifile,',resid',ifile,',wlog',ifile,FORMAT='(a,i1,a,i1,a,i1,a,i1,a,i1)'$
      else            print,'Reading arrays step',ifile,',t',ifile,',dt',     $
        ifile,',wlog',ifile,FORMAT='(a,i1,a,i1,a,i1,a,i1)'
      for i=0,nwlog-1 do $
         print,FORMAT='("  wlog",I1,"(*,",I2,")= ",A)',ifile,i,wlognames(i)
   endelse

   buf=500000
   dbuf=500000
   step=lonarr(buf)
   t=dblarr(buf)
   dt=dblarr(buf)
   wlog=dblarr(nwlog,buf)
   if okresid then resid=dblarr(buf)
   step_=long(1)
   t_=double(1)
   dt_=double(1)
   wlog_=dblarr(nwlog)
   if okresid then resid_=dblarr(1)
   nt=long(0)
   while not eof(1) do begin
      if okresid then readf,1,step_,t_,dt_,wlog_,resid_ $
      else            readf,1,step_,t_,dt_,wlog_
      ;print,step_,nt
      step(nt)=step_
      t(nt)=t_
      dt(nt)=dt_
      wlog(*,nt)=wlog_
      if okresid then resid(nt)=resid_
      nt=nt+long(1)
      if nt ge buf then begin
         buf=buf+dbuf
         step=[step,lonarr(dbuf)]
         t   =[t   ,dblarr(dbuf)]
         dt  =[dt  ,dblarr(dbuf)]
         wlog=[[wlog],[dblarr(nwlog,buf)]]
         if okresid then resid=[resid,dblarr(dbuf)]
      endif
   endwhile
   close,1
   print,'Number of recorded timesteps: nt=',nt
   step=step(0:nt-1)
   t=t(0:nt-1)
   dt=dt(0:nt-1)
   if okresid then resid=resid(0:nt-1)
   wlog=transpose(wlog(*,0:nt-1))

   if nlogfile gt 1 then begin
     case ifile of
     0: begin
          step0=step & t0=t & dt0=dt & wlog0=wlog
          if okresid then resid0=resid
        end
     1: begin
          step1=step & t1=t & dt1=dt & wlog1=wlog
          if okresid then resid1=resid
        end
     2: begin
          step2=step & t2=t & dt2=dt & wlog2=wlog
          if okresid then resid2=resid
        end
     endcase
   endif
endfor

end
